$date
	Thu Feb 22 23:47:57 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Seq_y86 $end
$var wire 64 ! valP [63:0] $end
$var wire 64 " valM [63:0] $end
$var wire 64 # valE [63:0] $end
$var wire 64 $ valC [63:0] $end
$var wire 64 % valB [63:0] $end
$var wire 64 & valA [63:0] $end
$var wire 64 ' rsp [63:0] $end
$var wire 64 ( rsi [63:0] $end
$var wire 64 ) rdx [63:0] $end
$var wire 64 * rdi [63:0] $end
$var wire 64 + rcx [63:0] $end
$var wire 64 , rbx [63:0] $end
$var wire 64 - rbp [63:0] $end
$var wire 64 . rax [63:0] $end
$var wire 4 / rB [3:0] $end
$var wire 4 0 rA [3:0] $end
$var wire 64 1 r9 [63:0] $end
$var wire 64 2 r8 [63:0] $end
$var wire 64 3 r14 [63:0] $end
$var wire 64 4 r13 [63:0] $end
$var wire 64 5 r12 [63:0] $end
$var wire 64 6 r11 [63:0] $end
$var wire 64 7 r10 [63:0] $end
$var wire 4 8 ifun [3:0] $end
$var wire 4 9 icode [3:0] $end
$var wire 64 : NewPC [63:0] $end
$var wire 1 ; INS $end
$var wire 1 < HLT $end
$var wire 1 = DataMemError $end
$var wire 3 > CondititonCodes_Out [2:0] $end
$var wire 1 ? Condition $end
$var wire 1 @ ADR $end
$var reg 1 A Clk $end
$var reg 3 B CondititonCodes_In [2:0] $end
$var reg 80 C Instruction [0:79] $end
$var reg 64 D PC [63:0] $end
$var reg 4 E Status [3:0] $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 E
b0 D
bx C
b0 B
0A
0@
x?
bx >
0=
0<
0;
bx :
bx 9
bx 8
b1010 7
b1011 6
b1100 5
b1101 4
b1110 3
b1000 2
b1001 1
bx 0
bx /
b0 .
b101 -
b11 ,
b1 +
b111 *
b10 )
b110 (
b0 '
bx &
bx %
bx $
b0 #
bx "
bx !
$end
#10
b11 E
1;
1A
